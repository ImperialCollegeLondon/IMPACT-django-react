# Generated by Django 4.2 on 2023-12-13 13:11

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0002_remove_note_updated'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommunityWorker',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('nombre', models.TextField()),
                ('appelido', models.TextField()),
                ('region', models.TextField()),
                ('n_attempt_visit', models.IntegerField(default=0)),
                ('n_completed_visit', models.IntegerField(default=0)),
                ('certificate_status', models.CharField(blank=True, choices=[('Base', 'Base'), ('Adv', 'Advanced'), ('Pro', 'Professional')], max_length=6)),
                ('telephone', models.TextField(unique=True)),
                ('email', models.TextField(unique=True)),
                ('image', models.TextField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='OlderAdult',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('nombre', models.TextField()),
                ('appelido', models.TextField()),
                ('status', models.CharField(blank=True, choices=[('Completado', 'Completado'), ('Detenido', 'Detenido'), ('Pendiente', 'Pendiente')], max_length=12)),
                ('AD8', models.CharField(blank=True, choices=[('Positive', 'Positive'), ('Negative', 'Negative')], max_length=12)),
                ('idioma', models.TextField(blank=True, null=True)),
                ('consent', models.BooleanField(default=False)),
                ('region', models.TextField()),
                ('telephone', models.TextField(blank=True)),
                ('email', models.TextField(blank=True)),
                ('image', models.TextField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Screening',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, choices=[('Completado', 'Completado'), ('Detenido', 'Detenido'), ('Pendiente', 'Pendiente')], max_length=12)),
                ('AD8_results', models.BooleanField(blank=True)),
                ('demo_item1', models.BooleanField(blank=True)),
                ('demo_item2', models.CharField(blank=True, choices=[('más60', '60 años o más de 60 años'), ('menos60', 'menos de 60 años')], max_length=8)),
                ('demo_item3', models.BooleanField(blank=True)),
                ('demo_sexo', models.CharField(blank=True, choices=[('Mujer', 'Mujer'), ('Hombre', 'Hombre'), ('Otras', 'Otras personas')], max_length=8)),
                ('demo_item4', models.BooleanField(blank=True)),
                ('demo_item5', models.BooleanField(blank=True)),
                ('q_item1', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No'), ('No-aplicable', 'No aplicable')], max_length=14)),
                ('q_item2', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No'), ('No-aplicable', 'No aplicable')], max_length=14)),
                ('q_item3', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No'), ('No-aplicable', 'No aplicable')], max_length=14)),
                ('q_item4', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No'), ('No-aplicable', 'No aplicable')], max_length=14)),
                ('q_item5', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No'), ('No-aplicable', 'No aplicable')], max_length=14)),
                ('q_item6', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No'), ('No-aplicable', 'No aplicable')], max_length=14)),
                ('q_item7', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No'), ('No-aplicable', 'No aplicable')], max_length=14)),
                ('q_item8', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No'), ('No-aplicable', 'No aplicable')], max_length=14)),
                ('rudas_item1', models.CharField(blank=True, choices=[('Correcto', 'Correcto'), ('Erroneo', 'Erroneo')], max_length=10)),
                ('rudas_item2', models.CharField(blank=True, choices=[('Correcto', 'Correcto'), ('Erroneo', 'Erroneo')], max_length=10)),
                ('rudas_item3', models.CharField(blank=True, choices=[('Correcto', 'Correcto'), ('Erroneo', 'Erroneo')], max_length=10)),
                ('rudas_item4', models.CharField(blank=True, choices=[('Correcto', 'Correcto'), ('Erroneo', 'Erroneo')], max_length=10)),
                ('rudas_item5', models.CharField(blank=True, choices=[('Correcto', 'Correcto'), ('Erroneo', 'Erroneo')], max_length=10)),
                ('rudas_item6', models.CharField(blank=True, choices=[('Correcto', 'Correcto'), ('Erroneo', 'Erroneo')], max_length=10)),
                ('rudas_item7', models.CharField(blank=True, choices=[('Correcto', 'Correcto'), ('Erroneo', 'Erroneo')], max_length=10)),
                ('rudas_item8', models.CharField(blank=True, choices=[('Correcto', 'Correcto'), ('Erroneo', 'Erroneo')], max_length=10)),
                ('rudas_item9', models.CharField(blank=True, choices=[('Normal', 'Normal'), ('Parcialmente', 'Parcialmente Adecuado'), ('Fallido', 'Fallido')], max_length=14)),
                ('rudas_item10', models.TextField(blank=True, unique=True)),
                ('rudas_item11', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No')], max_length=4)),
                ('rudas_item12', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No')], max_length=4)),
                ('rudas_item13', models.CharField(blank=True, choices=[('Si', 'Si'), ('No', 'No')], max_length=4)),
                ('rudas_item14', models.CharField(blank=True, choices=[('Correcto', 'Cualquier otra cosa, similitudes entre ellas'), ('Parcialmente', 'Una intencionada, la otra sin intención'), ('Incorrecto', 'Una mala, la otra buena o solo explica una de ellas')], max_length=15)),
                ('rudas_item15', models.CharField(blank=True, choices=[('Correcto', 'Buscarlo en la agenda de teléfonos, en la guía de teléfonos de la ciudad, ir a alguna municipalidad o dependencia a pedir información, llamar a un amigo en común)'), ('Parcialmente', 'Llamar a la policía, llamar a telefónica (normalmente no dan la dirección)'), ('Incorrecto', 'Sin respuesta clara')], max_length=15)),
                ('rudas_item16', models.JSONField(blank=True)),
                ('rudas_item17', models.IntegerField(blank=True, default=0)),
                ('rudas_item18', models.TextField(blank=True, unique=True)),
                ('pfeffer_item1', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('pfeffer_item2', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('pfeffer_item3', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('pfeffer_item4', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('pfeffer_item5', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('pfeffer_item6', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('pfeffer_item7', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('pfeffer_item8', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('pfeffer_item9', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('pfeffer_item10', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('pfeffer_item11', models.CharField(blank=True, choices=[('Normal_0', '0 - Normal'), ('Normal_1', '0 - Nunca lo hizo, pero podría hacerlo solo/a'), ('Con-dificultad_0', '1 - Nunca lo hizo y si tuviera que hacerlo ahora tendría dificultad'), ('Con-dificultad_1', '1 - Con dificultad, pero se maneja solo'), ('Necesita-ayuda', '2 - Necesita ayuda (pero lo hace)'), ('Dependiente', '3 - Dependiente (no puede realizarlo)')], max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-modified_at'],
            },
        ),
        migrations.CreateModel(
            name='StudyPartner',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('nombre', models.TextField()),
                ('appelido', models.TextField()),
                ('consent', models.BooleanField(default=False)),
                ('telephone', models.TextField(blank=True)),
                ('email', models.TextField(blank=True)),
                ('address', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, choices=[('Completado', 'Completado'), ('Detenido', 'Detenido'), ('Pendiente', 'Pendiente')], max_length=12)),
                ('duratioin', models.IntegerField(default=0)),
                ('safety_rating', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('screen_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.screening')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.DeleteModel(
            name='Note',
        ),
        migrations.AddField(
            model_name='olderadult',
            name='study_partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.studypartner'),
        ),
        migrations.AddField(
            model_name='olderadult',
            name='visit_id',
            field=models.ManyToManyField(blank=True, null=True, to='api.visit'),
        ),
        migrations.AddField(
            model_name='communityworker',
            name='visit_id',
            field=models.ManyToManyField(blank=True, null=True, to='api.visit'),
        ),
    ]
